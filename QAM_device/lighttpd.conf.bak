##########################################################################
# If not stated otherwise in this file or this component's Licenses.txt
# file the following copyright and licenses apply:
#
# Copyright 2016 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##########################################################################
server.modules = (
  "mod_redirect",
  "mod_access",
  "mod_ssi",
  "mod_cgi",
  "mod_setenv",
  "mod_proxy_core",
  "mod_proxy_backend_http",
  "mod_proxy_backend_fastcgi",
)

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root = "/opt/www"

## where to send error-messages to
server.errorlog             = "/opt/www/error.log"

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".php"          =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mp4"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
 )
 
 
setenv.add-environment = (
   "SNMP_BIN_DIR" => "/mnt/nfs/bin/target-snmp/bin",
   "MIBS" => "ALL",
   "MIBDIRS" => "/mnt/nfs/bin/target-snmp/share/snmp/mibs:/usr/share/snmp/mibs/",
   "LD_LIBRARY_PATH" => "$LD_LIBRARY_PATH:/mnt/nfs/bin/target-snmp/lib:/mnt/nfs/usr/lib"
)

## send a different Server: header
## be nice and keep it at lighttpd
server.tag                 = "lighttpd"

#### accesslog module
accesslog.filename          = "/opt/www/access.log"

url.access-deny             = ( "~", ".inc" )

$HTTP["url"] =~ "\.pdf$" {
  server.range-requests = "disable"
}

static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

######### Options that are good to be but not neccesary to be changed #######

## bind to port (default: 80)
server.port                = 50050
server.bind                = "0.0.0.0"

## to help the rc.scripts
server.pid-file            = "/var/run/lighttpd.pid"

###### virtual hosts
##
##  If you want name-based virtual hosting add the next three settings and load
##  mod_simple_vhost
##
## document-root =
##   virtual-server-root + virtual-server-default-host + virtual-server-docroot
## or
##   virtual-server-root + http-host + virtual-server-docroot
##
#simple-vhost.server-root   = "/home/weigon/wwwroot/servers/"
#simple-vhost.default-host  = "grisu.home.kneschke.de"
#simple-vhost.document-root = "/pages/"

##
## Format: <errorfile-prefix><status-code>.html
## -> ..../status-404.html for 'File not found'
#server.errorfile-prefix    = "/home/weigon/projects/lighttpd/doc/status-"

## virtual directory listings
#dir-listing.activate       = "enable"

## enable debugging
debug.log-request-header     = "enable"
debug.log-response-header    = "enable"
debug.log-request-handling   = "enable"
debug.log-file-not-found     = "enable"
#debug.log-condition-handling = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot              = "/"

## change uid to <uid> (default: don't care)
#server.username            = "wwwrun"

## change uid to <uid> (default: don't care)
#server.groupname           = "wwwrun"

#### compress module
#compress.cache-dir         = "/tmp/lighttpd/cache/compress/"
#compress.filetype          = ("text/plain", "text/html")

#### proxy module
## read proxy.txt for more info
#$HTTP["url"] =~ "\.php$" {
#	proxy-core.balancer = "round-robin"
#	proxy-core.allow-x-sendfile = "enable"
#	proxy-core.protocol = "http"
#	proxy-core.backends = ( "192.168.0.101:80" )
#	proxy-core.max-pool-size = 16
#}


#### fastcgi module
## read fastcgi.txt for more info
## for PHP don't forget to set cgi.fix_pathinfo = 1 in the php.ini
#$HTTP["url"] =~ "\.php$" {
#	proxy-core.balancer = "round-robin"
#	proxy-core.allow-x-sendfile = "enable"
#	proxy-core.check-local = "enable"
#	proxy-core.protocol = "fastcgi"
#	proxy-core.backends = ( "unix:/tmp/php-fastcgi.sock" )
#	proxy-core.max-pool-size = 16
#}
#fastcgi.debug               = 1

#$HTTP["url"] =~ "^/multicast(/|$)" {
#$HTTP["url"] =~ "^(/multicast|/udp)(/|$)" {
#    proxy-core.protocol = "fastcgi" 
#    proxy-core.balancer = "round-robin"
#    proxy-core.backends = ( "127.0.0.1:9500", 
#                            "127.0.0.1:9501",
#                            "127.0.0.1:9502",
#                            "127.0.0.1:9503",
#                            "127.0.0.1:9504",
#                            "127.0.0.1:9505",
#                            "127.0.0.1:9506",
#                            "127.0.0.1:9507",
#                            "127.0.0.1:9508",
#                            "127.0.0.1:9509" )
#  }

$HTTP["url"] =~ "^/upnp(/|$)" {
    proxy-core.protocol = "fastcgi"
    proxy-core.backends = ( "127.0.0.1:9876" )
  }
  
url.redirect = ( "^/proxy/(.+)" => " http://$1" )

cgi.assign = (
     ".sh"  => "/bin/ash",
     ".php"  => "/usr/local/bin/php-cgi")
          
#### ssi
ssi.extension = ( ".html" )

index-file.names = (
    "index.html",
    "index.shtml",
    "index.php",
    "index.htm",
    "default.htm"
)

$HTTP["url"] =~ "/snmp/" {
  # this must point to where ever the snmp2json executable is,
  # which will then act upon the 'script' (i.e. list of oids) in
  # the (e.g.) /var/www/snmp/ dir
  cgi.assign = ( "" => "/sysint/diagnostics/snmp2json.sh" )
}
      
$HTTP["url"] =~ "^/device(/|$)" { 
proxy-core.protocol = "fastcgi" 
proxy-core.backends = ( "127.0.0.1:9620" ) 
}
